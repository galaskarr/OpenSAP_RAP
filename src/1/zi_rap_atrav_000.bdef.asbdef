managed;
with draft;

define behavior for ZI_RAP_ATRAV_000 alias Travel
implementation in class zbp_i_rap_atrav_000 unique
persistent table zrap_atrav_000
draft table zrap_dtrav_000
lock master total etag LastChangedAt
authorization master ( instance )
etag master LocalLastChangedAt
{
  create;
  update;
  delete;
  association _Booking { create; with draft; }

  field ( numbering : managed, readonly ) TravelUUID;
  //Controle de campo estático
  field ( readonly ) TravelID, TotalPrice, TravelStatus;
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;
  //Define os campos como mandatários
  field ( mandatory ) AgencyID, CustomerID;

  // Ambas ações retornam $self com cardinalidade 1, onde $self significa que uma instância
  // do mesmo tipo é retornada sempre que a operação é executada
  //Aprovação da viagem
  action ( features : instance ) acceptTravel result [1] $self;
  //Rejeição da viagem
  action ( features : instance ) rejectTravel result [1] $self;
  // Recalcula o preço total
  internal action recalcTotalPrice;


  // usado para determinar por padrão o status N sempre que uma nova instância é criada
  determination setInitialStatus on modify
  { create; }

  determination calculateTotalPrice on modify
  { field BookingFee, CurrencyCode; }

  determination calculateTravelID on save
  { create; }


  validation validateAgency on save { field AgencyID; create; }
  validation validateCustomer on save { field CustomerID; create; }
  validation validateDates on save { field BeginDate, EndDate; create; }

  draft determine action Prepare
  {
    validation validateAgency;
    validation validateCustomer;
    validation validateDates;
  }

  mapping for zrap_atrav_000
  {
    TravelUUID = travel_uuid;
    TravelID = travel_id;
    AgencyID = agency_id;
    CustomerID = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    BookingFee = booking_fee;
    TotalPrice = total_price;
    CurrencyCode = currency_code;
    Description = description;
    TravelStatus = overall_status;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
    LocalLastChangedAt = local_last_changed_at;
  }
}

define behavior for ZI_RAP_ABOOK_000 alias Booking
implementation in class zbp_i_rap_abook_000 unique
persistent table zrap_abook_000
draft table zrap_dbook_000
lock dependent by _Travel
authorization dependent by _Travel
//authorization dependent by <association>
etag master LocalLastChangedAt
{
  association _Travel { with draft; }
  update;
  delete;

  field ( numbering : managed, readonly ) BookingUUID;
  field ( readonly ) TravelUUID, BookingID;
  field ( readonly ) CreatedBy, LastChangedBy, LocalLastChangedAt;

  // Criar o id sempre que uma nova reserva é criada
  determination calculateBookingID on modify
  { create; }
    // Calcular o preço total sempre que os preços do voo e a moeda são modificados
    determination calculateTotalPrice on modify { field FlightPrice, CurrencyCode; }

    mapping for zrap_abook_000
    {
      BookingUUID = booking_uuid;
      TravelUUID = travel_uuid;
      BookingID = booking_id;
      BookingDate = booking_date;
      CustomerID = customer_id;
      CarrierID = carrier_id;
      ConnectionID = connection_id;
      FlightDate = flight_date;
      FlightPrice = flight_price;
      CurrencyCode = currency_code;
      CreatedBy = created_by;
      LastChangedBy = last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
    }

  }